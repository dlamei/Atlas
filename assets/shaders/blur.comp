#version 450 core

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(rgba8) uniform image2D img;

struct Settings {
	float evaporationSpeed;
	float difuseSpeed;
	int kernelSize;
};

layout (std430) buffer settingsBuffer {
	Settings settings;
};

void main() {
	ivec2 texSize = imageSize(img);
	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);

	vec3 sum = vec3(0, 0, 0);

	for (int x = -settings.kernelSize; x <= settings.kernelSize; x++) {
		for (int y = -settings.kernelSize; y <= settings.kernelSize; y++) {
			ivec2 c = uv + ivec2(x, y);

			if (c.x < texSize.x || c.y < texSize.y || c.x >= 0 || c.y >= 0) {
				sum += imageLoad(img, c).xyz;
			}
		}
	}

	sum /= 9;

	vec4 value = vec4(mix(imageLoad(img, uv).xyz, sum, settings.difuseSpeed), 1);
	value = max(vec4(0, 0, 0, 0), value - settings.evaporationSpeed);
	value.a = 1;
	
	imageStore(img, uv, value);

	

}
